# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    encoder.cost: 15
    idleTimeout: 15  #set to zero to ignore, in minutes.
    security.password.reset.token.ttl: 86400
    security.password.settings:
        min_length: 8
        specials: false
        numbers: true
        mixed_case: true
    security.routes:
        security_user_edit: user_edit
        security_user_login: login
        security_user_check: login
        security_user_logout: logout
        security_password_forgot: password_request_reset
        security_forced_password_change: forced_password_change
        security_home: home
    security.groups:
        Parent: [ROLE_PARENT]
        Student: [ROLE_STUDENT]
        Teaching Staff: [ROLE_STAFF, ROLE_TEACHER, ROLE_ALLOWED_TO_SWITCH]
        Support Staff: [ROLE_STAFF]
        Administration Staff: [ROLE_STAFF, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        Contact: [ROLE_USER]
    security.hierarchy.roles:
        ROLE_USER: ~
        ROLE_ALLOWED_TO_SWITCH: ~
        ROLE_PARENT:
            - ROLE_USER
        ROLE_STUDENT:
            - ROLE_USER
        ROLE_STAFF:
            - ROLE_USER
        ROLE_TEACHER:
            - ROLE_ALLOWED_TO_SWITCH
            - ROLE_STUDENT
            - ROLE_STAFF
        ROLE_HEAD_TEACHER:
            - ROLE_TEACHER
        ROLE_PRINCIPAL:
            - ROLE_HEAD_TEACHER
        ROLE_ADMIN:
            - ROLE_ALLOWED_TO_SWITCH
        ROLE_REGISTRAR:
            - ROLE_PRINCIPAL
            - ROLE_ADMIN
        ROLE_SYSTEM_ADMIN:
            - ROLE_REGISTRAR
            - ROLE_PARENT

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Voter}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Core\Controller\:
        resource: '../src/Core/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Install\Manager\InstallManager:
        class: App\Install\Manager\InstallManager
        arguments:
            - '%kernel.project_dir%'
        public: true
    App\Core\Manager\CacheManager:
        class: App\Core\Manager\CacheManager
        arguments:
            - '%kernel.cache_dir%'
    app.core.subscriber.table_prefix_subscriber:
        class: App\Core\Subscriber\TablePrefixSubscriber
        arguments:
            - '%db_prefix%'
        tags:
            - { name: doctrine.event_subscriber }
    App\Core\Listener\MailerLoggerListener:
        arguments:
            - "@logger"
        tags:
          - { name: monolog.logger, channel: mailer }
          - { name: "swiftmailer.default.plugin" }
    app.voter.setting_voter:
        class: App\Voter\SettingVoter
        arguments:
            - 'ROLE_'
        tags:
            - { name: security.voter, priority: 250 }
        public: true
    App\Core\Validator\BackgroundImage:
        public: true
    app.voter.current_user_voter:
        class: App\Voter\CurrentUserVoter
        tags:
            - { name: security.voter, priority: 125 }
        public: true
    App\Core\Manager\GoogleAuthenticator:
        arguments:
            - '@KnpU\OAuth2ClientBundle\Client\ClientRegistry'
            - '@doctrine.orm.default_entity_manager'
            - '@router'
            - '@App\Core\Manager\MessageManager'
            - '@App\Core\Manager\SettingManager'
            - '@monolog.logger.security'
    app.core.manager.translation_manager:
        class: App\Core\Manager\TranslationManager
        decorates: 'translator'
        arguments:
            - '@app.core.manager.translation_manager.inner'
            - '@doctrine.orm.default_entity_manager'
            - '@App\Core\Manager\SettingManager'
            - '@monolog.logger.translation'
        public: false
